/**
\mainpage
\htmlinclude manifest.html

\b dcsl_high_level_control 

This package provides "high level control" for planar robots. The dcsl_miabot_follower_control node implements an algorithm to cause robots to follow or 'chase' one another. The C++ library dcsl_miabot_high_level_math provides the control law for that node.

Launchfiles are also included to create ipc-bridge nodes that allow control algorithms written in Matlab to be called from ROS. Sample Matlab node and control law files are included within the matlab folder. Issues with installation of ipc-bridge have kept us from testing that functionality.

\section rosapi ROS API

List of nodes:
- \b dcsl_miabot_follower_control.cc

List of libraries:
- \b dcsl_miabot_high_level_math.h

List of launchfiles
- \b miabot_high_level
- \b test_pose_array_subsciber

<hr>

\subsection dcsl_high_level_control dcsl_miabot_follower_control

This node subscribes to robot state estimates in PoseArray form, and calculates and publishes waypoints in PoseArray form such that the robots will follow each other.

\subsection usage Usage
\verbatim
$ dcsl_miabot_follower_control [standard ROS args]
\endverbatim

\subsubsection topics ROS topics

Subscribes to (name / type):
- \b "state_estimate/PoseArray" : array "poses" holds estimate of current pose for each robot.

Publishes to (name / type):
- \b "waypoint_input/PoseArray" : array "poses" holds desired pose waypoint for each robot.


\subsubsection parameters ROS parameters
- \b "/n_robots" : Number of robots to be controlled.

<hr>

\subsection dcsl_miabot_high_level_math

This is a C++ shared-object library that includes the math functions used in the dcsl_miabot_high_level_control package.


*/
